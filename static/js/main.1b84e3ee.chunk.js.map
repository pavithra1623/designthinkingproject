{"version":3,"sources":["JobPost.js","Search.js","Dashboard.js","ForgotPassword.js","SignUp.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["JobPost","props","state","jobTile","location","jobType","description","email","salary","companyName","companyWebsite","companyImage","companyLocation","postFlag","onSubmitHandler","bind","backToDashBoard","handleJobTitle","handleLocation","handleJobType","handleDescription","handleEmail","handleSalary","handleCompanyName","handleCompanyWebsite","handleCompanyImage","handleCompanyLocation","this","setState","event","console","log","localStorage","hasOwnProperty","list","JSON","parse","getItem","job","push","setItem","stringify","arr","e","target","value","makeStyles","theme","seeMore","marginTop","spacing","color","signIn","className","AppBar","style","backgroundColor","position","alignitems","Toolbar","Grid","container","justify","wrap","IconButton","onClick","paddingLeft","direction","item","Paper","variant","elevation","onSubmit","handleSubmit","TextField","type","fullWidth","margin","name","onChange","autoFocus","Button","React","Component","Search","jobs","searchKeyWord","filteredJobs","dashboard","searchFlag","searchForJobs","handleKey","key","undefined","i","length","toLowerCase","includes","alignItems","map","itemJob","xs","Card","sx","maxWidth","CardMedia","component","height","image","alt","CardContent","Typography","gutterBottom","CardActions","href","size","indexOf","Dashboard","signOut","postAJob","searchAJob","setStyles","postJob","root","display","toolbar","paddingRight","listItems","toolbaricon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","classes","clsx","noWrap","ForgotPassword","forgottenEmail","forgottenPassword","changedPassword","handleEmailChange","handlePasswordChange","password","alert","placeholder","username","required","SignUp","signUpEmail","signUpPassword","signUpFlag","user","Login","signInError","forgotPasswordFlag","signUp","forgotPassword","textTransform","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b84e3ee.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    AppBar,\n    Toolbar\n} from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dashboard from \"./Dashboard\";\nimport NotificationsIcon from '@material-ui/icons/Home';\nclass JobPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            jobTile: \"\",\n            location: \"\",\n            jobType: \"\",\n            description: \"\",\n            email: \"\",\n            salary: \"\",\n            companyName: \"\",\n            companyWebsite: \"\",\n            companyImage: \"\",\n            companyLocation: \"\",\n            postFlag: false\n        };\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n        this.backToDashBoard = this.backToDashBoard.bind(this);\n        this.handleJobTitle = this.handleJobTitle.bind(this);\n        this.handleLocation = this.handleLocation.bind(this);\n        this.handleJobType = this.handleJobType.bind(this);\n        this.handleDescription = this.handleDescription.bind(this);\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handleSalary = this.handleSalary.bind(this);\n        this.handleCompanyName = this.handleCompanyName.bind(this);\n        this.handleCompanyWebsite = this.handleCompanyWebsite.bind(this);\n        this.handleCompanyImage = this.handleCompanyImage.bind(this);\n        this.handleCompanyLocation = this.handleCompanyLocation.bind(this);\n    }\n\n    backToDashBoard() {\n        this.setState({ postFlag: true });\n    }\n\n    onSubmitHandler(event) {\n        console.log(\"Success\");\n        let jobTile = this.state.jobTile;\n        let location = this.state.location;\n        let jobType = this.state.jobType;\n        let description = this.state.description;\n        let email = this.state.email;\n        let salary = this.state.salary;\n        let companyName = this.state.companyName;\n        let companyWebsite = this.state.companyWebsite;\n        let companyImage = this.state.companyImage;\n        let companyLocation = this.state.companyLocation;\n        if (!localStorage.hasOwnProperty(\"jobposts\")) {\n            let arr = [];\n            let job = {\n                \"jobTile\": jobTile,\n                \"location\": location,\n                \"jobType\": jobType,\n                \"description\": description,\n                \"email\": email,\n                \"salary\": salary,\n                \"companyName\": companyName,\n                \"companyWebsite\": companyWebsite,\n                \"companyImage\": companyImage,\n                \"companyLocation\": companyLocation\n            };\n            arr.push(job);\n            console.log(job);\n            localStorage.setItem(\"jobposts\", JSON.stringify(arr));\n        } else {\n            let list = JSON.parse(localStorage.getItem(\"jobposts\"));\n            let job = {\n                \"jobTile\": jobTile,\n                \"location\": location,\n                \"jobType\": jobType,\n                \"description\": description,\n                \"email\": email,\n                \"salary\": salary,\n                \"companyName\": companyName,\n                \"companyWebsite\": companyWebsite,\n                \"companyImage\": companyImage,\n                \"companyLocation\": companyLocation\n            };\n            list.push(job);\n            console.log(job);\n            localStorage.setItem(\"jobposts\", JSON.stringify(list));\n        }\n        this.setState({\n            postFlag: true\n        });\n    }\n\n    handleJobTitle(e) {\n        this.setState({ jobTile: e.target.value });\n    }\n\n    handleLocation(e) {\n        this.setState({ location: e.target.value });\n    }\n\n    handleJobType(e) {\n        this.setState({ jobType: e.target.value });\n    }\n\n    handleDescription(e) {\n        this.setState({ description: e.target.value });\n    }\n\n    handleEmail(e) {\n        this.setState({ email: e.target.value });\n    }\n\n    handleSalary(e) {\n        this.setState({ salary: e.target.value });\n    }\n\n    handleCompanyName(e) {\n        this.setState({ companyName: e.target.value });\n    }\n\n    handleCompanyWebsite(e) {\n        this.setState({ companyWebsite: e.target.value });\n    }\n\n    handleCompanyImage(e) {\n        this.setState({ companyImage: e.target.value });\n    }\n\n    handleCompanyLocation(e) {\n        this.setState({ companyLocation: e.target.value });\n    }\n\n    setStyles() {\n        const useStyles = makeStyles((theme) => ({\n            seeMore: {\n                marginTop: theme.spacing(3),\n                color: 'red'\n            },\n        }));\n        return useStyles;\n    }\n\n    render() {\n        console.log(this.state.signIn);\n        if (this.state.postFlag) {\n            return (\n                <Dashboard />\n            );\n        } else {\n            return (\n                <div className=\"image\">\n                    <AppBar style={{ backgroundColor: \"#9933ff\" }} position=\"static\" alignitems=\"center\" color=\"primary\">\n                        <Toolbar>\n                            <Grid container justify=\"center\" wrap=\"wrap\">\n                                {/* <Grid item>\n                                    <Typography variant=\"h6\">Post A Job</Typography>\n                                </Grid> */}\n                                <IconButton onClick={this.backToDashBoard} style={{ paddingLeft: '1000px' }} color=\"inherit\">\n                                Back to Dashboard\n                                    <NotificationsIcon />\n                                </IconButton>\n                            </Grid>\n                        </Toolbar>\n                    </AppBar>\n                    <Grid container spacing={0} justify=\"center\" direction=\"row\">\n                        <Grid item>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                spacing={2}\n                                className=\"login-form\"\n                            >\n                                <Paper\n                                    variant=\"elevation\"\n                                    elevation={2}\n                                    className=\"login-background\"\n                                >\n                                    <Grid item>\n                                        <form onSubmit={this.handleSubmit}>\n                                            <Grid container direction=\"column\" spacing={2}>\n                                                <Grid item>\n                                                    Job Title:\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"jobTitle\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.jobTile}\n                                                        onChange={this.handleJobTitle}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    Location:\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"location\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.location}\n                                                        onChange={this.handleLocation}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    Job Type:\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"jobType\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.jobType}\n                                                        onChange={this.handleJobType}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    Description:\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"description\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.description}\n                                                        onChange={this.handleDescription}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    Application Email:\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"email\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.email}\n                                                        onChange={this.handleEmail}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    Salary:\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"salary\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.salary}\n                                                        onChange={this.handleSalary}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    Company Name:\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"companyName\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.companyName}\n                                                        onChange={this.handleCompanyName}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    Company Website:\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"companyWebsite\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.companyWebsite}\n                                                        onChange={this.handleCompanyWebsite}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    Company Image:\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"companyImage\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.companyImage}\n                                                        onChange={this.handleCompanyImage}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    Company Location:\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"companyLocation\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.companyLocation}\n                                                        onChange={this.handleCompanyLocation}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        type=\"submit\"\n                                                        className=\"button-block\"\n                                                        onClick={this.onSubmitHandler}\n                                                        style={{ backgroundColor: \"#9933ff\" }}\n                                                    >\n                                                        POST\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </form>\n                                    </Grid>\n\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    }\n}\nexport default JobPost;","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport TextField from '@mui/material/TextField';\nimport {\n    AppBar,\n    Toolbar\n} from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Dashboard from \"./Dashboard\";\nimport NotificationsIcon from '@material-ui/icons/Home';\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            jobs: [],\n            searchKeyWord: \"\",\n            filteredJobs: [],\n            dashboard: false,\n            searchFlag: false\n        };\n        this.searchForJobs = this.searchForJobs.bind(this);\n        this.handleKey = this.handleKey.bind(this);\n        this.backToDashBoard = this.backToDashBoard.bind(this);\n    }\n\n    componentDidMount() {\n        if (localStorage.hasOwnProperty(\"jobposts\")) {\n            let jobs = JSON.parse(localStorage.getItem(\"jobposts\"));\n            this.setState({ filteredJobs: jobs });\n        }\n    }\n\n    backToDashBoard() {\n        this.setState({ dashboard: true });\n    }\n\n    handleKey(e) {\n        this.setState({ searchKeyWord: e.target.value });\n    }\n\n    searchForJobs() {\n        this.setState({ searchFlag: true });\n        let jobs = JSON.parse(localStorage.getItem(\"jobposts\"));\n        let key = this.state.searchKeyWord;\n        let arr = [];\n        if (key !== undefined) {\n            for (let i = 0; i < jobs.length; i++) {\n                if (jobs[i].description.toLowerCase().includes(key.toLowerCase())) {\n                    arr.push(jobs[i]);\n                }\n            }\n        }\n        this.setState({ filteredJobs: arr });\n    }\n\n    render() {\n        if(this.state.dashboard) {\n            return (\n                <Dashboard />\n            );\n        } else if(this.state.searchFlag) {\n            return (\n                <div>\n                    <AppBar style={{ backgroundColor: \"#9933ff\" }} position=\"static\" alignitems=\"center\" color=\"primary\">\n                            <Toolbar>\n                                <Grid container justify=\"center\" wrap=\"wrap\">\n                                    {/* <Grid item>\n                                        <Typography variant=\"h6\">Post A Job</Typography>\n                                    </Grid> */}\n                                    <IconButton onClick={this.backToDashBoard} style={{ paddingLeft: '1000px' }} color=\"inherit\">\n                                    Back to Dashboard\n                                        <NotificationsIcon />\n                                    </IconButton>\n                                </Grid>\n                            </Toolbar>\n                        </AppBar>\n                    <Grid container spacing={0} justify=\"center\" direction=\"row\">\n                        <Grid item>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                spacing={2}\n                                className=\"login-form\"\n                            >\n                                <div>\n                                    <Grid\n                                        container\n                                        spacing={2}\n                                        direction=\"row\"\n                                        justify=\"flex-start\"\n                                        alignItems=\"flex-start\"\n                                        style={{ margin: \"200px\" }}\n                                    >\n                                        {this.state.filteredJobs.map((itemJob) => (\n                                            <Grid item xs={6} key={this.state.filteredJobs.indexOf(itemJob)}>\n                                                <Card sx={{ maxWidth: 450 }}>\n                                                    <CardMedia\n                                                        component=\"img\"\n                                                        height=\"140\"\n                                                        image={itemJob.companyImage}\n                                                        alt=\"green iguana\"\n                                                    />\n                                                    <CardContent>\n                                                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                                            {itemJob.companyName}\n                                                        </Typography>\n                                                        <Typography variant=\"body2\" color=\"text.secondary\">\n                                                            {itemJob.description}\n                                                        </Typography>\n                                                    </CardContent>\n                                                    <CardActions>\n                                                        <Button href={itemJob.email} target=\"_blank\" size=\"small\">Careers</Button>\n                                                        <Button href={itemJob.companyWebsite} target=\"_blank\" size=\"small\">Learn More</Button>\n                                                    </CardActions>\n                                                </Card>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <AppBar style={{ backgroundColor: \"#9933ff\" }} position=\"static\" alignitems=\"center\" color=\"primary\">\n                            <Toolbar>\n                                <Grid container justify=\"center\" wrap=\"wrap\">\n                                    {/* <Grid item>\n                                        <Typography variant=\"h6\">Post A Job</Typography>\n                                    </Grid> */}\n                                    <IconButton onClick={this.backToDashBoard} style={{ paddingLeft: '1000px' }} color=\"inherit\">\n                                    Back to Dashboard\n                                        <NotificationsIcon />\n                                    </IconButton>\n                                </Grid>\n                            </Toolbar>\n                        </AppBar>\n                    <Grid container spacing={0} justify=\"center\" direction=\"row\">\n                        <Grid item>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                spacing={2}\n                                className=\"login-form\"\n                            >\n                                <Grid item>\n                                        <form onSubmit={this.handleSubmit}>\n                                            <Grid container direction=\"column\" spacing={2}>\n                                                <Grid item>\n                                                    <TextField\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"searchbox\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.searchKeyWord}\n                                                        onChange={this.handleKey}\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        type=\"submit\"\n                                                        className=\"button-block\"\n                                                        onClick={this.searchForJobs}\n                                                        style={{ backgroundColor: \"#9933ff\" }}\n                                                    >\n                                                        Search\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </form>\n                                    </Grid>\n                                <div>\n                                    <Grid\n                                        container\n                                        spacing={2}\n                                        direction=\"row\"\n                                        justify=\"flex-start\"\n                                        alignItems=\"flex-start\"\n                                        style={{ margin: \"200px\" }}\n                                    >\n                                        {this.state.filteredJobs.map((itemJob) => (\n                                            <Grid item xs={6} key={this.state.filteredJobs.indexOf(itemJob)}>\n                                                <Card sx={{ maxWidth: 450 }}>\n                                                    <CardMedia\n                                                        component=\"img\"\n                                                        height=\"140\"\n                                                        image={itemJob.companyImage}\n                                                        alt=\"green iguana\"\n                                                    />\n                                                    <CardContent>\n                                                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                                            {itemJob.companyName}\n                                                        </Typography>\n                                                        <Typography variant=\"body2\" color=\"text.secondary\">\n                                                            {itemJob.description}\n                                                        </Typography>\n                                                    </CardContent>\n                                                    <CardActions>\n                                                        <Button href={itemJob.email} target=\"_blank\" size=\"small\">Careers</Button>\n                                                        <Button href={itemJob.companyWebsite} target=\"_blank\" size=\"small\">Learn More</Button>\n                                                    </CardActions>\n                                                </Card>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n        \n    }\n}\nexport default Search;","import React from 'react';\nimport clsx from 'clsx';\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport JobPost from './JobPost';\nimport Login from './Login';\nimport Search from './Search';\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jobs: []\n    };\n    this.signOut = this.signOut.bind(this);\n    this.postAJob = this.postAJob.bind(this);\n    this.searchAJob = this.searchAJob.bind(this);\n    this.setStyles = this.setStyles.bind(this);\n  }\n\n  componentDidMount() {\n    if (localStorage.hasOwnProperty(\"jobposts\")) {\n      let jobs = JSON.parse(localStorage.getItem(\"jobposts\"));\n      this.setState({ jobs: jobs });\n    }\n  }\n\n  postAJob() {\n    this.setState({ postJob: true });\n  }\n\n  searchAJob() {\n    this.setState({ searchAJob: true });\n  }\n\n  signOut() {\n    this.setState({ signOut: true });\n  }\n\n  setStyles() {\n    const drawerWidth = 240;\n    const useStyles = makeStyles((theme) => ({\n      root: {\n        display: 'flex',\n      },\n      toolbar: {\n        paddingRight: 5,\n      },\n      listItems: {\n        color: \"white\"\n      },\n      toolbaricon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        backgroundColor: \"#5E10B1\"\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      menuButton: {\n        marginRight: 36\n      },\n      menuButtonHidden: {\n        display: 'none',\n      },\n      title: {\n        flexGrow: 1,\n      },\n      drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        backgroundColor: \"#5E1081\"\n      },\n      drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9),\n        },\n      },\n      appBarSpacer: theme.mixins.toolbar,\n      content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n      },\n      container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n      },\n      paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column'\n      },\n      fixedHeight: {\n        height: 240,\n      },\n    }));\n    return useStyles;\n  }\n\n  render() {\n    const classes = this.setStyles();\n    console.log(classes);\n    if (this.state.postJob) {\n      console.log(\"Hello\");\n      return (\n        <JobPost />\n      );\n    } else if (this.state.signOut) {\n      return (\n        <Login />\n      );\n    } else if (this.state.searchAJob) {\n      return (\n        <Search />\n      );\n    } else {\n      return (\n        <div className={classes.root}>\n          <AppBar  style={{ backgroundColor: \"#9933ff\" }} position=\"absolute\" className={clsx(classes.appBar && classes.appBarShift)}>\n            <Toolbar className={classes.toolbar}>\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                Dreams come true\n              </Typography >\n              <Button style={{ paddingLeft: '800px' }} onClick={this.searchAJob}>\n                Search For A Job\n              </Button>\n              <Button style={{ paddingLeft: '15px' }} onClick={this.postAJob}>\n                Post A Job\n              </Button>\n              <Button style={{ paddingLeft: '15px' }} onClick={this.signOut}>\n                Sign Out\n              </Button>\n              {/* <IconButton style={{ justifyContent: 'flex-end' }} color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton> */}\n            </Toolbar>\n          </AppBar>\n          \n          <div>\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-start\"\n              style={{ margin: \"200px\" }}\n            >\n              {this.state.jobs.map((itemJob) => (\n                <Grid item xs={6} key={this.state.jobs.indexOf(itemJob)}>\n                  <Card sx={{ maxWidth: 450 }}>\n                    <CardMedia\n                      component=\"img\"\n                      height=\"140\"\n                      image={itemJob.companyImage}\n                      alt=\"green iguana\"\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\" component=\"div\">\n                        {itemJob.companyName}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {itemJob.description}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Button href={itemJob.email} target=\"_blank\" size=\"small\">Careers</Button>\n                      <Button href={itemJob.companyWebsite} target=\"_blank\" size=\"small\">Learn More</Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </div>\n        </div>\n      );\n    }\n  }\n}\nexport default Dashboard;","import React from 'react';\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper\n} from \"@material-ui/core\";\nimport Login from './Login';\nclass ForgotPassword extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            forgottenEmail: \"\",\n            forgottenPassword: \"\",\n            changedPassword: false\n        };\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    }\n\n    onSubmitHandler(event) {\n        console.log(\"Sign Up\");\n        let email = this.state.forgottenEmail;\n        let password = this.state.forgottenPassword;\n        if (!localStorage.hasOwnProperty(\"usersSignedUp\")) {\n            alert(\"You have not signed up\");\n        } else {\n            let list = JSON.parse(localStorage.getItem(\"usersSignedUp\"));\n            console.log(list);\n            for (var i = 0; i < list.length; i++) {\n                if (list[i].email === email) {\n                    list[i].password = password;\n                }\n            }\n            localStorage.setItem(\"usersSignedUp\", JSON.stringify(list));\n            this.setState({\n                changedPassword: true\n            });\n            alert(\"Changed Password Successfully\");\n        }\n    }\n\n    handleEmailChange(e) {\n        this.setState({ forgottenEmail: e.target.value });\n    }\n\n    handlePasswordChange(e) {\n        this.setState({ forgottenPassword: e.target.value });\n    }\n\n    render() {\n        if (this.state.changedPassword) {\n            return (\n                <Login />\n            );\n        } else {\n            return (\n                <div>\n                    <Grid container spacing={0} justify=\"center\" direction=\"row\">\n                        <Grid item>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                spacing={2}\n                                className=\"login-form\"\n                            >\n                                <Paper\n                                    variant=\"elevation\"\n                                    elevation={2}\n                                    className=\"login-background\"\n                                >\n                                    <Grid item>\n                                        <form onSubmit={this.handleSubmit}>\n                                            <Grid container direction=\"column\" spacing={2}>\n                                                <Grid item>\n                                                    <TextField\n                                                        type=\"email\"\n                                                        placeholder=\"Email\"\n                                                        className=\"forgotPassword\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"username\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.username}\n                                                        onChange={this.handleEmailChange}\n                                                        required\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        type=\"password\"\n                                                        placeholder=\"New Password\"\n                                                        className=\"forgotPassword\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"password\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.password}\n                                                        onChange={this.handlePasswordChange}\n                                                        required\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        type=\"password\"\n                                                        placeholder=\"Confirm Password\"\n                                                        className=\"forgotPassword\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"password\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.password}\n                                                        onChange={this.handlePasswordChange}\n                                                        required\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        type=\"submit\"\n                                                        className=\"button-block\"\n                                                        onClick={this.onSubmitHandler}\n                                                    >\n                                                        Change Password\n                                                </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </form>\n                                    </Grid>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    }\n}\n\nexport default ForgotPassword;","import React from 'react';\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper\n} from \"@material-ui/core\";\nimport Login from './Login';\nclass SignUp extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            signUpEmail: \"\",\n            signUpPassword: \"\",\n            signUpFlag: false\n        };\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    }\n    onSubmitHandler(event) {\n        console.log(\"Sign Up\");\n        let email = this.state.signUpEmail;\n        let password = this.state.signUpPassword;\n        if(!localStorage.hasOwnProperty(\"usersSignedUp\")) {\n            let arr = [];\n            let user = {\n                \"email\": email,\n                \"password\": password\n            };\n            arr.push(user);\n            localStorage.setItem(\"usersSignedUp\", JSON.stringify(arr));\n        } else {\n            let list = JSON.parse(localStorage.getItem(\"usersSignedUp\"));\n            console.log(list);\n            let user = {\n                \"email\": email,\n                \"password\": password\n            };\n            list.push(user);\n            localStorage.setItem(\"usersSignedUp\", JSON.stringify(list));\n        }\n        this.setState({\n            signUpFlag: true\n        });\n        alert(\"Signed Up Successfully\");\n    }\n\n    handleEmailChange(e) {\n        this.setState({ signUpEmail: e.target.value });\n    }\n\n    handlePasswordChange(e) {\n        this.setState({ signUpPassword: e.target.value });\n    }\n\n    render() {\n        if (this.state.signUpFlag) {\n            return (\n                <Login />\n            );\n        } else {\n            return (\n                <div>\n                    <Grid container spacing={0} justify=\"center\" direction=\"row\">\n                        <Grid item>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                spacing={2}\n                                className=\"login-form\"\n                            >\n                                <Paper\n                                    variant=\"elevation\"\n                                    elevation={2}\n                                    className=\"login-background\"\n                                >\n                                    <Grid item>\n                                        <form onSubmit={this.handleSubmit}>\n                                            <Grid container direction=\"column\" spacing={2}>\n                                                <Grid item>\n                                                    <TextField\n                                                        type=\"email\"\n                                                        placeholder=\"Email\"\n                                                        className=\"forgotPassword\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"username\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.username}\n                                                        onChange={this.handleEmailChange}\n                                                        required\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        type=\"password\"\n                                                        placeholder=\"Password\"\n                                                        className=\"forgotPassword\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"password\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.password}\n                                                        onChange={this.handlePasswordChange}\n                                                        required\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        type=\"password\"\n                                                        placeholder=\"Confirm Password\"\n                                                        className=\"forgotPassword\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"password\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.password}\n                                                        onChange={this.handlePasswordChange}\n                                                        required\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        type=\"submit\"\n                                                        className=\"button-block\"\n                                                        onClick={this.onSubmitHandler}\n                                                    >\n                                                        Sign Up\n                                                </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </form>\n                                    </Grid>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    }\n}\n\nexport default SignUp;","import React from \"react\";\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    AppBar,\n    Typography,\n    Toolbar\n} from \"@material-ui/core\";\nimport Dashboard from './Dashboard';\nimport ForgotPassword from './ForgotPassword';\nimport SignUp from './SignUp';\nimport { makeStyles } from '@material-ui/core/styles';\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signInError: false,\n            signIn: false,\n            email: \"\",\n            password: \"\",\n            signUpFlag: false,\n            forgotPasswordFlag: false\n        };\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.signUp = this.signUp.bind(this);\n        this.forgotPassword = this.forgotPassword.bind(this);\n    }\n\n    onSubmitHandler(event) {\n        console.log(\"Success\");\n        let email = this.state.email;\n        let password = this.state.password;\n        if (!localStorage.hasOwnProperty(\"usersSignedUp\")) {\n            alert(\"You have not signed up\");\n        } else {\n            let list = JSON.parse(localStorage.getItem(\"usersSignedUp\"));\n            console.log(list);\n            for (var i = 0; i < list.length; i++) {\n                if (list[i].email === email && list[i].password === password) {\n                    this.setState({\n                        signIn: true\n                    });\n                } else {\n                    this.setState({\n                        signInError: true\n                    });\n                }\n            }\n        }\n    }\n\n    signUp() {\n        this.setState({ signUpFlag: true });\n    }\n\n    forgotPassword() {\n        this.setState({ forgotPasswordFlag: true });\n    }\n\n    handleEmailChange(e) {\n        this.setState({ email: e.target.value });\n    }\n\n    handlePasswordChange(e) {\n        this.setState({ password: e.target.value });\n    }\n\n    setStyles() {\n        const useStyles = makeStyles((theme) => ({\n            seeMore: {\n                marginTop: theme.spacing(3),\n                color: 'red'\n            },\n        }));\n        return useStyles;\n    }\n\n    render() {\n        console.log(this.state.signIn);\n        if (this.state.signInError) {\n            alert('Incorrect Credntials!');\n        }\n        if (this.state.signIn) {\n            return (\n                <Dashboard />\n            );\n        } else if (this.state.signUpFlag) {\n            return (\n                <SignUp />\n            );\n        } else if (this.state.forgotPasswordFlag) {\n            return (\n                <ForgotPassword />\n            );\n        }\n        else {\n            return (\n                <div className=\"image\">\n                    <AppBar position=\"static\" alignitems=\"center\" color=\"primary\">\n                        <Toolbar>\n                            <Grid container justify=\"center\" wrap=\"wrap\">\n                                <Grid item>\n                                    <Typography variant=\"h6\">Dreams come true</Typography>\n                                </Grid>\n                            </Grid>\n                        </Toolbar>\n                    </AppBar>\n                    <Grid container spacing={0} justify=\"center\" direction=\"row\">\n                        <Grid item>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                spacing={2}\n                                className=\"login-form\"\n                            >\n                                <Paper\n                                    variant=\"elevation\"\n                                    elevation={2}\n                                    className=\"login-background\"\n                                >\n                                    <Grid item>\n                                        <Typography component=\"h1\" variant=\"h5\">\n                                            Sign in\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <form onSubmit={this.handleSubmit}>\n                                            <Grid container direction=\"column\" spacing={2}>\n                                                <Grid item>\n                                                    <TextField\n                                                        type=\"email\"\n                                                        placeholder=\"Email\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"username\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.username}\n                                                        onChange={this.handleEmailChange}\n                                                        required\n                                                        autoFocus\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <TextField\n                                                        type=\"password\"\n                                                        placeholder=\"Password\"\n                                                        fullWidth\n                                                        margin=\"normal\"\n                                                        name=\"password\"\n                                                        variant=\"outlined\"\n                                                        value={this.state.password}\n                                                        onChange={this.handlePasswordChange}\n                                                        required\n                                                    />\n                                                </Grid>\n                                                <Grid item>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        type=\"submit\"\n                                                        className=\"button-block\"\n                                                        onClick={this.onSubmitHandler}\n                                                    >\n                                                        Sign In\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </form>\n                                    </Grid>\n                                    <Grid container >\n                                        <Grid item xs>\n                                            <Button style={{textTransform:'none'}}\n                                                onClick={this.forgotPassword}\n                                            >\n                                                Forgot password?\n                                            </Button>\n                                        </Grid>\n                                        <Grid item>\n                                            <Button style={{textTransform:'none'}}\n                                                onClick={this.signUp}\n                                            >\n                                                Don't have an account? Sign Up\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            );\n        }\n    }\n}\nexport default Login;","import React from 'react';\nimport Login from './Login';\nfunction App() {\n  return (\n    <Login />\n  );\n}\n  export default App;\n// }\n// const drawerWidth = 240;\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',\n//   },\n//   toolbar: {\n//     paddingRight: 24, // keep right padding when drawer closed\n//   },\n//   toolbarIcon: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'flex-end',\n//     padding: '0 8px',\n//     ...theme.mixins.toolbar,\n//   },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 1,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//   },\n//   appBarShift: {\n//     marginLeft: drawerWidth,\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   menuButton: {\n//     marginRight: 36,\n//   },\n//   menuButtonHidden: {\n//     display: 'none',\n//   },\n//   title: {\n//     flexGrow: 1,\n//   },\n//   drawerPaper: {\n//     position: 'relative',\n//     whiteSpace: 'nowrap',\n//     width: drawerWidth,\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   drawerPaperClose: {\n//     overflowX: 'hidden',\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     width: theme.spacing(7),\n//     [theme.breakpoints.up('sm')]: {\n//       width: theme.spacing(9),\n//     },\n//   },\n//   appBarSpacer: theme.mixins.toolbar,\n//   content: {\n//     flexGrow: 1,\n//     height: '100vh',\n//     overflow: 'auto',\n//   },\n//   container: {\n//     paddingTop: theme.spacing(4),\n//     paddingBottom: theme.spacing(4),\n//   },\n//   paper: {\n//     padding: theme.spacing(2),\n//     display: 'flex',\n//     overflow: 'auto',\n//     flexDirection: 'column',\n//   },\n//   fixedHeight: {\n//     height: 240,\n//   },\n// }));\n// export default function Dashboard() {\n//   const classes = useStyles();\n//   const [open, setOpen] = React.useState(true);\n//   const handleDrawerOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleDrawerClose = () => {\n//     setOpen(false);\n//   };\n//   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n//         <Toolbar className={classes.toolbar}>\n//           <IconButton\n//             edge=\"start\"\n//             color=\"inherit\"\n//             aria-label=\"open drawer\"\n//             onClick={handleDrawerOpen}\n//             className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n//           >\n//             <MenuIcon />\n//           </IconButton>\n//           <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n//             Dashboard\n//           </Typography>\n//           <IconButton color=\"inherit\">\n//             <Badge badgeContent={4} color=\"secondary\">\n//               <NotificationsIcon />\n//             </Badge>\n//           </IconButton>\n//         </Toolbar>\n//       </AppBar>\n//       <Drawer\n//         variant=\"permanent\"\n//         classes={{\n//           paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n//         }}\n//         open={open}\n//       >\n//         <div className={classes.toolbarIcon}>\n//           <IconButton onClick={handleDrawerClose}>\n//             <ChevronLeftIcon />\n//           </IconButton>\n//         </div>\n//         <Divider />\n//         <List>{mainListItems}</List>\n//         <Divider />\n//         <List>{secondaryListItems}</List>\n//       </Drawer>\n//       <main className={classes.content}>\n//         <div className={classes.appBarSpacer} />\n//         <Container maxWidth=\"lg\" className={classes.container}>\n//           <Grid container spacing={3}>\n//             {/* Chart */}\n//             <Grid item xs={12} md={8} lg={9}>\n//               <Paper className={fixedHeightPaper}>\n//                 <Chart />\n//               </Paper>\n//             </Grid>\n//             {/* Recent Deposits */}\n//             <Grid item xs={12} md={4} lg={3}>\n//               <Paper className={fixedHeightPaper}>\n//                 <Deposits />\n//               </Paper>\n//             </Grid>\n//             {/* Recent Orders */}\n//             <Grid item xs={12}>\n//               <Paper className={classes.paper}>\n//                 <Orders />\n//               </Paper>\n//             </Grid>\n//           </Grid>\n//           <Box pt={4}>\n//             <Copyright />\n//           </Box>\n//         </Container>\n//       </main>\n//     </div>\n//   );\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}